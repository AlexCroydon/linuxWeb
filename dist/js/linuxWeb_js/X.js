X={openMenus:[],status:{screen:"lockScreen"},menus:{contextMenu:{createOnMousePosition:!0,listenerType:"contextmenu",toggleElement:null,recreateBehaviour:"recreate",changeBorder:!1,preventDefault:!0,enterAnimation:"fadeIn",exitAnimation:"fadeOut",exitAnimationTime:100,elementQuery:"#context_menu",getHTML:function(e=100,t=100){return`\n\t\t<div id='context_menu' style="top: ${t}px;left: ${e}px;">\n\t\t\t\t<span onclick="X.cta('Unavailable','This feature is not yet implemented',[['Sad Face :(']])">Change Background</span>\n                <hr>\n\t\t\t\t<span onclick="processes.create('terminal')">Terminal</span>\n\t\t\t\t<span onclick="processes.create('settings')">Settings</span>\n                <hr>\n                <span class='context_sub_menu_header'>Hello</span>\n                <div class='context_sub_menu'>\n                <span>New</span>\n                <span>Context</span>\n                <span>Sub</span>\n                <span>Menu</span>\n                <span>YAY!</span>\n\n                </div>\n\t\t\t</div>\n\t\t\t\t`},closeCondition:function(e){return"context_menu"!=e.target.id}},activities:{listenerType:"click",toggleElement:document.querySelector("#activitiesMenuButton"),enterAnimation:"fadeIn",exitAnimation:"fadeOut",exitAnimationTime:200,elementQuery:"#activitiesMenuContainer",getHTML:function(){return`\n\t\t\t\t<div id='activitiesMenuContainer'>\n\t\t\t\t\t<div class='app_search'><search_icon></search_icon><input placeholder='Type to search' type='search'></div>\n\t\t\t\t\t<div class='favorites'>\n\t\t\t\t\t${Object.entries(apps).map(e=>{let t;return t=null!=e[1].icon?`<img src='${e[1].icon}'>`:null!=e[1].name?`<span>${e[1].name[0]}</span>`:e[0][0],`<app onclick="X.clearOpenMenus();processes.create('${e[0]}');" --data-tooltip="${e[1].name}" >${t}</app>`}).join("")}\n\t\t\t</div>\n\t\t\t\t</div>\n\t\t`},closeCondition:function(e){return e.target==document.querySelector("#activitiesMenuContainer")}},notificationPanel:{listenerType:"click",toggleElement:document.querySelector("#topBarDateTime"),enterAnimation:"bottomFadeIn",exitAnimation:"bottomFadeOut",exitAnimationTime:200,elementQuery:"#notificationPanelContainer",parseNotificationsToHTML:function(){let e;if(e=X.notification.get()){let t="";return Object.values(e).forEach(e=>{t+=`<notification onclick="${e.clickAction}"><div class='notification_content'><img src='${e.iconPath}'><div class='notification_text_wrapper'><h1>${e.title}</h1><div class='description'>${e.description}</div></div></div>${e.type?"":`<x_icon onclick='X.notification.remove(${e.id}); this.parentElement.remove()'></x_icon>`}</notification>`}),t}},getHTML:function(){if("desktop"==X.status.screen){reminderForm={message:{display:"Message",value:"",type:"string",required:!0},time:{display:"Remind At",value:0,type:"number",required:!0}};let e=`(async()=>{reminder = await X.ctaform("Create Reminder", ${JSON.stringify(reminderForm)});\n                command = "remind " + reminder.message.value + " -t " + reminder.time.value;\n                system.cli.i(command, true)})()`;return`<div id='notificationPanelContainer'>\n                    <div class='notifications_container'>\n                        <div class='notification_wrapper'>${this.parseNotificationsToHTML()}</div>\n                            <div class='notification_footer'>\n                                <do_not_disrupt><span>Do not disturb</span><input id='doNotDisruptSwitch' ${system.global.doNotDisturb&&"checked"} type="checkbox"><label onclick="system.global.doNotDisturb = !this.parentElement.querySelector('#doNotDisruptSwitch').checked" for="doNotDisruptSwitch"></label></do_not_disrupt>\n                            <button class='button type-a' onclick='X.notification.removeAll(); document.querySelector("#notificationPanelContainer .notifications_container div.notification_wrapper").innerHTML = X.menus.notificationPanel.parseNotificationsToHTML()'>Clear</button>\n                            </div>\n                    </div>\n                        <calendar_container>\n                            <div class='calendar_wrapper'>\n                                ${X.calendar.getHTML()}\n                            </div>\n                            <button class='button type-a' onclick='${e}'>Add Reminder</button>\n                        </calendar_container>\n                    </div>`}if("loginScreen"==X.status.screen)return`<div id='notificationPanelContainer'>\n                        <calendar_container>\n                            <div class='calendar_wrapper'>\n                                ${X.calendar.getHTML()}\n                            </div>\n                        </calendar_container>\n                    </div>`},closeCondition:function(e){return!elementIsInEventPath(e,document.querySelector("#notificationPanelContainer"))||tagIsInEventPath(e,"NOTIFICATION")&&"X_ICON"!=e.target.tagName}},statusArea:{listenerType:"click",toggleElement:document.querySelector("#statusAreaButton"),enterAnimation:"bottomFadeIn",exitAnimation:"bottomFadeOut",exitAnimationTime:200,elementQuery:"#statusAreaContainer",getHTML:function(){return"loginScreen"==X.status.screen?`<div id='statusAreaContainer'>\n                        <li>\n                            <volume_icon></volume_icon>\n                            <input oninput='system.changeVolume(this.value)' id='volume_slider' min="0" max="100" value="${system.global.volume}" step="1" type="range">\n                        </li>\n                        <li>\n                            <brightness_icon></brightness_icon>\n                            <input oninput='system.changeBrightness(this.value)' id='brightness_slider' min="25" max="175" value="${system.global.brightness}" step="1" type="range">\n                        </li>\n                        <hr>\n                        <div class='dropdown_item' onclick='X.general.dropdown.toggle(this)'>\n                            <li><power_off_icon></power_off_icon><span>Power Off / Log Out</span><down_icon></down_icon></li>\n                            <dropdown>\n                                <li onclick='X.restart();'><span>Restart</span></li>\n                                <li onclick='X.shutdown();'><span>Power Off</span></li>\n                            </dropdown>\n                        </div>\n                    </div>`:"lockScreen"==X.status.screen?`<div class='lockscreen' id='statusAreaContainer'>\n                    <li>\n                        <volume_icon></volume_icon>\n                        <input oninput='system.changeVolume(this.value)' id='volume_slider' min="0" max="100" value="${system.global.volume}" step="1" type="range">\n                    </li>\n                    <li>\n                        <brightness_icon></brightness_icon>\n                        <input oninput='system.changeBrightness(this.value)' id='brightness_slider' min="25" max="175" value="${system.global.brightness}" step="1" type="range">\n                    </li>\n                    <hr>\n                    <div class='dropdown_item' onclick='X.general.dropdown.toggle(this)'>\n                        <li><power_off_icon></power_off_icon><span>Power Off / Log Out</span><down_icon></down_icon></li>\n                        <dropdown>\n                            <li onclick='X.logoff();'><span>Log Off</span></li>\n                            <hr>\n                            <li onclick='X.restart();'><span>Restart</span></li>\n                            <li onclick='X.shutdown();'><span>Power Off</span></li>\n                        </dropdown>\n                    </div>\n                        </div>`:"desktop"==X.status.screen?`<ul id='statusAreaContainer'>\n                    <li>\n                    <volume_icon></volume_icon>\n                    <input oninput='system.changeVolume(this.value)' id='volume_slider' min="0" max="100" value="${system.global.volume}" step="1" type="range">\n                    </li>\n                    <li>\n                    <brightness_icon></brightness_icon>\n                    <input  oninput='system.changeBrightness(this.value)' id='brightness_slider' min="25" max="175" value="${system.global.brightness}" step="1" type="range">\n                    </li>\n                    <hr>\n                    <li><network_icon></network_icon><span>Connected</span></li>\n                    <hr>\n                    <li onclick="X.clearOpenMenus();processes.create('settings')"><settings_icon></settings_icon><span>Settings</span></li>\n                    <li onclick="X.screen.set('lockScreen')"><padlock_icon></padlock_icon><span>Lock</span></li>\n                    <div class='dropdown_item' onclick='X.general.dropdown.toggle(this)'>\n                    <li><power_off_icon></power_off_icon><span>Power Off / Log Out</span><down_icon></down_icon></li>\n                    <dropdown>\n                        <li onclick='X.restart();'><span>Restart</span></li>\n                        <li onclick='X.shutdown();'><span>Power Off</span></li>\n                        <hr>\n                        <li onclick='X.logout();'><span>Log Out</span></li>\n                    </dropdown>\n                    </div>\n                    </ul>`:void 0},closeCondition:function(e){return!elementIsInEventPath(e,document.querySelector("#statusAreaContainer"))}}},contextMenu:{stored:[],add:function(e,t){let n="";for(const e of t)if(isTextEmpty(e[0]))n+="<hr>";else if(Array.isArray(e[1])){n+=`<span class="context_sub_menu_header">${e[0]}</span>\n                    <div class='context_sub_menu'>`;for(const t of e[1])n+=`<span onclick="${t[1]}">${t[0]}</span>`;n+="</div>"}else n+=`<span onclick="${e[1]}">${e[0]}</span>`;this.stored.push({element:e,layout:t,innerHTML:n}),e.addEventListener("contextmenu",e=>{X.clearOpenMenus();let t=`<div id='context_menu' class='fadeIn' style="top: ${e.clientY}px;left: ${e.clientX}px;">${n}</div>`;systemMenuContainer.innerHTML=t,X.openMenus.push("contextMenu")})}},notification:{notifications:{},get:function(){return this.notifications!={}&&this.notifications},create:function(e="",t="",n="",i="",o=!1,s=!0){e=e||"Notification",t=t||"This is a default notification",i=i||"./img/about.svg",type="boolean"==typeof type&&o,n=n||"",id=0==Object.entries(this.notifications).length?0:Number(Object.keys(this.notifications).sort().slice(-1))+1,s&&!system.global.doNotDisturb&&(notificationHTML=`<div onclick="${n}; this.style.display = 'none'" ><title>${e}</title><description>${t}</description></div>`,popupNotificationContainer.insertAdjacentHTML("afterbegin",notificationHTML),popupNotificationContainer.children[0].style.transform="scale(1)",popupNotificationContainer.children[0].style.transition="all 0.2s linear",setTimeout(()=>{popupNotificationContainer.children[0].style.transform="scale(0.8)",popupNotificationContainer.children[0].style.opacity="0",setTimeout(()=>{popupNotificationContainer.children[0].remove()},200)},5e3)),this.notifications[id]={title:e,description:t,iconPath:i,type:type,clickAction:n,id:id}},remove:function(e){delete this.notifications[e]},removeAll:function(){for(x of Object.entries(X.notification.notifications))0==x[1].type&&delete X.notification.notifications[x[0]]}},calendar:{getHTML:function(){let e=`<div class='calendar'><month>${date.get("month>full date year")}</month><div class='calendar_content'>\n<week_days><div>Sun</div><div>Mon</div><div>Tue</div><div>Wed</div><div>Thu</div><div>Fri</div><div>Sat</div></week_days><dates>`;return this.createCalendarArray(0,0,!0,!0).forEach(t=>{e+="<week>",e+=t.map(e=>`<day><span ${e.startsWith("-")?"class = 'not_current_months_date'":""} ${e.startsWith("&")?"class = 'current_date'":""}>${e.replace(/-|&/gm,"")||e}</span></day>`).join(""),e+="</week>"}),e+"</div></div>"},createCalendarArray:function(e=0,t=0,n=!1,i=!1){e=e||date.get("year"),t=t||date.get("month");const o=new Date(`${e}/${t}/1`);monthLastDay=new Date(o),monthLastDay.setMonth(monthLastDay.getMonth()+1),monthLastDay=new Date(monthLastDay-864e5);const s=new Date(o);s.setMonth(s.getMonth()-1);const r=new Date(o-864e5);let a=new Date(o-864e5*o.getDay()),c=range(a.getDate(),r.getDate()+1),l=range(o.getDate(),monthLastDay.getDate()+1),u=range(1,30);n&&(c=c.map(e=>"-"+e),u=u.map(e=>"-"+e)),i&&(day=Number(date.get("date")),l[day-1]="&"+l[day-1]);let m=[].concat(c,l,u).slice(0,42);m=m.map(e=>1==(e=String(e)).length?"0"+e:e);let d=[];for(let e=0;e<6;e++)d.push(m.splice(0,7));return d}},services:{clock:{onStart:function(){setTimeout(()=>{setInterval(()=>{this.update.updateElements.forEach(e=>{e.element.innerHTML=date.get(e.options)}),console.log("Time updated. Next one in: ",60-(new Date).getSeconds())},6e4)},1e3*(60-(new Date).getSeconds()))},update:{updateElements:[],add:function(e,t){for(const t of this.updateElements)if(t.element==e)return!1;newObj={element:e,options:t},this.updateElements.push(newObj),this.updateNow(e,t)},remove:function(e){for(const t of this.updateElements)if(t.element==e)return delete t,!0},updateNow:function(e,t){e.innerHTML=date.get(t)}}},volume:{update:function(){volume=system.global.volume,volume>66?img="url('./img/volume/high.svg')":volume>33?img="url('./img/volume/medium.svg')":volume>0?img="url('./img/volume/low.svg')":img="url('./img/volume/mute.svg')",document.querySelectorAll("volume_icon").forEach(e=>e.style.backgroundImage=img)}}},general:{dropdown:{toggle:e=>{if(!isDefined(e))return!1;let t=e.querySelector("dropdown");""==t.style.height?(t.style=`height:${30*t.childElementCount}px;`,e.querySelector("down_icon").style.transform="rotate(0deg)"):(t.style.height="",e.querySelector("down_icon").style.transform="")}}},overlay:{create:function(e){X.clearOpenMenus(),overlayContainer.querySelector(".general").innerHTML+=`<div class='overlay'>${e}</div>`},remove:function(){overlayContainer.querySelectorAll(".general > div.overlay").forEach(e=>e.remove())}},cta:function(e="cta title :)",t="This is a generic cta message",n=[["OK",!0]]){if(n==[]||"object"!=typeof n)return!1;"object"!=typeof n[0]&&(n=[...n]);let i=`\n                <cta>\n                    <h1>${e}</h1>\n                    <span>${t}</span>\n                    <div class='buttons_container'>${n.map(e=>`<input type='button' value='${e[0]}'>`).join("")}</div>\n                </cta>\n            `;return X.overlay.create(i),document.querySelector("cta > .buttons_container > input").focus(),buttonsInDOM=document.querySelectorAll("cta > .buttons_container > input"),new Promise(e=>{for(const t in n)buttonsInDOM[t].addEventListener("click",async i=>{X.overlay.remove(),e(n[t][1])})})},ctaform:function(e,t){let n="";if(isObjectEmpty(t))return!1;for(const e of Object.entries(t))itemName=e[0],itemContent=e[1],itemType=typeof itemContent.type,"number"!=itemType&&"string"!=itemType&&(itemContent.type=""),n+=`<li><span>${itemContent.display}</span><input id='${itemName}' type='${itemContent.type}' value='${itemContent.value}' ></li>`;let i=`\n                <cta>\n                    <h1>${e}</h1>\n                    <form>${n}</form>\n                    <span class='error_message'></span>\n                    <div class='buttons_container'><input type='button' value='Cancel'><input type='button' value='Submit'></div>\n                </cta>\n            `;return X.overlay.create(i),ctaFormInputsInDOM=document.querySelectorAll("cta > form input"),buttonsInDOM=document.querySelectorAll("cta > .buttons_container > input"),console.log(ctaFormInputsInDOM),new Promise(e=>{document.querySelector("cta > .buttons_container input[value='Submit']").addEventListener("click",async n=>{for(const e of ctaFormInputsInDOM){if(formItem=t[e.id],1==formItem.required&&""==e.value.trim())return document.querySelector("cta .error_message").innerHTML=`'${formItem.display}' Can't be empty`,!1;if(formItem.type!=typeof e.value&&isNaN(Number(e.value)))return document.querySelector("cta .error_message").innerHTML=`'${formItem.display}' must be a ${typeof formItem.type}`,!1;formItem.value=e.value}X.overlay.remove(),e(t),console.log(t)}),document.querySelector("cta > .buttons_container input[value='Cancel']").addEventListener("click",async t=>{X.overlay.remove(),e(!1)})})},shutdown:async function(){let e=setTimeout(()=>{system.shutdown()},1e4),t=X.cta("Power Off","This 'thing' Will turn off in 10 seconds!",[["Cancel",!1],["Power Off",!0]]);await t&&system.shutdown(),clearTimeout(e)},logout:async function(){let e=setTimeout(()=>{system.logout()},1e4),t=X.cta("Log Out","You will be logged out in 10 seconds!",[["Cancel",!1],["Log Out",!0]]);await t&&system.logout(),clearTimeout(e)},restart:async function(){let e=setTimeout(()=>{system.restart()},1e4),t=X.cta("Restart","This 'thing' Will restart in 10 seconds!",[["Cancel",!1],["Restart",!0]]);await t&&system.restart(),clearTimeout(e)},topBar:{hide:function(){topBar.style.display="none"},show:function(){topBar.style.display=""},setColor:function(e=""){topBar.style.backgroundColor=e,topBar.style.borderColor=e},showWrappers:function(e=!0,t=!0,n=!0){topBar.querySelector(".left_wrapper").style.visibility=e?"":"hidden",topBar.querySelector(".middle_wrapper").style.visibility=t?"":"hidden",topBar.querySelector(".right_wrapper").style.visibility=n?"":"hidden"}},screen:{activeSubScreen:"",activeScreen:"",set:function(e){X.clearOpenMenus(),["loginScreen","lockScreen","desktop"].includes(e)&&(mainContent.innerHTML=screens[e].html,X.status.screen=e,this.activeScreen=e,this.activeSubScreen="",this[e].init())},setActiveSubScreen:function(e){mainContent.querySelectorAll(".login-lock_screen > *").forEach(e=>{e.style.display="none"}),mainContent.querySelectorAll(".ignore_hide").forEach(e=>e.style.display=""),mainContent.querySelector(e).style.display="",this.activeSubScreen=e},setToUserProfilePicture:function(e,t){isDefined(t)?(e.style.backgroundImage=`url('${t}')`,e.classList.add("custom_picture")):(e.style.backgroundImage="",e.classList.remove("custom_picture"))},loginScreen:{init:function(){X.topBar.showWrappers(0,1,1),X.topBar.setColor("transparent"),system.activeUser="",this.showAccounts()},showAccounts:function(){X.screen.setActiveSubScreen(".center_container"),mainContent.querySelector(".account_container").innerHTML="";let e=Object.values(system.accounts).map(e=>{if("root"!=e.username)return`\n                    <div class='account_content' onclick="X.screen.loginScreen.showLoginForm('${e.username}')">\n                        <user_icon ${isDefined(e.settings.profilePictureUrl)&&`style="background-image:url('${e.settings.profilePictureUrl}')" class="custom_picture"`}"></user_icon>\n                        <span>${e.username}</span>\n                    </div>\n            `}).join("");mainContent.querySelector(".account_container").insertAdjacentHTML("afterbegin",e)},showLoginForm:function(e){X.screen.setActiveSubScreen("#loginForm");let t=mainContent.querySelector("#loginForm");t.querySelector("#loginUserName").innerHTML=e,X.screen.setToUserProfilePicture(t.querySelector("user_icon"),system.accounts[e].settings.profilePictureUrl),t.reset();let n=t.querySelector("input");n.classList.remove("incorrectLogin"),n.focus(),t.addEventListener("submit",i=>{i.preventDefault();let o=new FormData(t);if(system.validatePassword(e,o.get("password")))return X.screen.set("desktop"),system.activeUser=e,void Object.entries(system.accounts[e].settings).forEach(e=>{let[t,n]=[e[0],e[1]];if(isObject(n))switch(n.type){case"cssVar":root.style.setProperty("--"+n.variable,n.value)}});n.classList.remove("incorrectLogin"),n.offsetWidth,n.classList.add("incorrectLogin")})},showCustomLoginForm:function(){X.screen.setActiveSubScreen("#customLoginForm");let e=mainContent.querySelector("#customLoginForm");e.reset(),e.querySelector("input").focus(),e.addEventListener("submit",t=>{t.preventDefault();let n=new FormData(e).get("username");this.showLoginForm(n)})}},lockScreen:{pauseElementChange:!1,init:function(){X.topBar.showWrappers(0,0,1),X.topBar.setColor("transparent"),this.time=mainContent.querySelector("#loginTime > time"),this.date=mainContent.querySelector("#loginTime > date"),X.services.clock.update.add(this.time,"time-s"),X.services.clock.update.add(this.date,"day>str month>str date");let e=mainContent.querySelector("#loginForm"),t=mainContent.querySelector("#loginTime"),n=e.querySelector("input");t.classList.add("selected"),X.screen.setToUserProfilePicture(e.querySelector("user_icon"),system.accounts[system.activeUser].settings.profilePictureUrl),mainContent.querySelector(".login-lock_screen").addEventListener("mouseup",e=>{t.classList.contains("selected")&&this.showLoginForm()});document.addEventListener("keyup",e=>{if(console.log(e),t.classList.contains("selected"))return this.showLoginForm();"Escape"==e.code&&this.showTime()}),e.querySelector("#loginUserName").innerHTML=system.activeUser,e.reset(),n.classList.remove("incorrectLogin"),n.focus(),e.addEventListener("submit",t=>{t.preventDefault();let i=new FormData(e);system.validatePassword(system.activeUser,i.get("password"))?X.screen.set("desktop"):(n.classList.remove("incorrectLogin"),n.offsetWidth,n.classList.add("incorrectLogin"))})},enablePauseElementChange:function(){this.pauseElementChange=!0,setTimeout(()=>{this.pauseElementChange=!1},500)},showTime:function(){this.pauseElementChange||(this.enablePauseElementChange(),loginTime.classList.add("selected"),loginForm.classList.remove("selected"),mainContent.querySelector(".switch_user_button").style.transform="scale(0)")},showLoginForm:function(){this.pauseElementChange||(this.enablePauseElementChange(),loginTime.classList.remove("selected"),loginForm.classList.add("selected"),mainContent.querySelector(".switch_user_button").style.transform="scale(1)",setTimeout(()=>{loginForm.querySelector("input").focus()},100))}},desktop:{init:function(){X.topBar.showWrappers(1,1,1),X.topBar.setColor(""),desktop=document.querySelector("#mainContent > #desktop"),popupNotificationContainer=document.querySelector("#mainContent > #popupNotificationsContainer"),appsContainer=document.querySelector("#mainContent > #appsContainer"),appList=document.querySelector("#mainContent > #appList"),X.contextMenu.add(desktop,[["Change Background","X.cta('Unavailable','This feature is not yet implemented',[['Sad Face :(']])"],[""],["Terminal","processes.create('terminal')"],["Settings","processes.create('settings')"]])}}},initialize:function(){root=document.documentElement,linux=document.querySelector("#linuxRoot"),topBar=document.querySelector("#linuxRoot> #topBar"),mainContent=document.querySelector("#mainContent"),systemMenuContainer=document.querySelector("#overlayContainer > #systemOverlays #systemMenuContainer"),systemExitAnimationMenuContainer=document.querySelector("#overlayContainer > #systemOverlays #systemMenuAnimationContainer"),overlayContainer=document.querySelector("body > #overlayContainer"),X.screen.set("loginScreen"),X.services.clock.update.add(document.querySelector("#topBarDateTime"),"month>str date time-s"),X.notification.create("","","","","",!1),X.notification.create("Virus Alert","Your computer has a virus","X.cta('JK','No virus here...')","./img/network.svg",!0,!1),Object.entries(X.services).forEach(e=>{let[t,n]=[e[0],e[1]];"function"==typeof n.onStart&&n.onStart()}),X.menus.openMenuClicked=!1,this.openMenu=[],xObjSchema={createOnMousePosition:!1,listenerType:"click",toggleElement:void 0,recreateBehaviour:"toggle",changeBorder:!0,preventDefault:!1,getHTML:"",onCreate:"",closeCondition:"",enterAnimation:"",exitAnimation:"",elementQuery:""},Object.entries(X.menus).forEach(e=>{let[t,n]=[e[0],e[1]],i={};Object.assign(i,xObjSchema),Object.assign(i,n),"object"==typeof n&&null!=i.toggleElement&&"function"==typeof i.getHTML&&i.toggleElement.addEventListener(i.listenerType,e=>{X.openMenus.includes(t)&&"recreate"!=i.recreateBehaviour||(X.clearOpenMenus(!0),i.preventDefault&&e.preventDefault(),setTimeout(()=>{X.createMenu(i,e.clientX,e.clientY),systemMenuContainer.children[systemMenuContainer.children.length-1].addEventListener("click",e=>{("function"==typeof i.closeCondition&&!i.closeCondition(e)||"function"!=typeof i.closeCondition)&&0==X.menus.openMenuClicked&&(X.menus.openMenuClicked=!0)}),i.changeBorder&&i.toggleElement.classList.add("selected-topBar"),X.openMenus.push(t),"function"==typeof i.onCreate&&i.onCreate(e)},1))})}),document.body.addEventListener("click",()=>{if(X.menus.openMenuClicked)return X.menus.openMenuClicked=!1,!1;X.clearOpenMenus()}),console.log("X Initialize")},clearOpenMenus:function(e=!1){(0!=X.openMenus.length||e)&&(X.openMenus.forEach(e=>{if(isDefined(X.menus[e].toggleElement)&&X.menus[e].toggleElement.classList.remove("selected-topBar"),X.menus[e].elementQuery&&X.menus[e].exitAnimation){let t=document.querySelector(X.menus[e].elementQuery);isDefined(t)&&(systemExitAnimationMenuContainer.insertAdjacentElement("afterbegin",t),t.classList.add(X.menus[e].exitAnimation),X.menus[e].enterAnimation&&t.classList.remove(X.menus[e].enterAnimation),setTimeout(()=>{systemExitAnimationMenuContainer.innerHTML=""},X.menus[e].exitAnimationTime||200))}}),X.openMenus=[],systemMenuContainer.innerHTML="")},createMenu:function(e,t,n){let i=e.getHTML(t,n),o=e.elementQuery;if(systemMenuContainer.insertAdjacentHTML("beforeend",i),e.createOnMousePosition){let e=systemMenuContainer.querySelector(o);t=t>window.innerWidth-e.offsetWidth?window.innerWidth-e.offsetWidth:t,n=n>window.innerHeight-(e.offsetHeight+appList.offsetHeight)?window.innerHeight-(e.offsetHeight+appList.offsetHeight+1):n,e.style.top=n+"px",e.style.left=t+"px"}if(""!=e.elementQuery&&""!=e.enterAnimation){systemMenuContainer.querySelector(e.elementQuery).classList.add(e.enterAnimation)}}};