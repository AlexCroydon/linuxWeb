system={started:!1,encPassword:"bf0dbd74174039131b667de9f31b5d8012baaf82011b934b2cc0e3bd53a02a1f",global:{volume:50,brightness:100,css:{}},changeBrightness:function(e){this.global.brightness=e,document.querySelector("html").style.filter=`brightness(${system.global.brightness/100})`},changeVolume:function(e){this.global.volume=e,X.services.volume.update()},startup:function(){if(this.started)return!1;this.started=!0,(async()=>{system.build=await(async()=>(await fetch("./build.ver")).text())()})(),X.initialize(),X.services.clock.update.add(document.querySelector("dateTime"),"month>str date  time-s"),X.notification.create(),X.notification.create("Virus Alert","Your computer has a virus","X.cta('JK','No virus here...')","./img/network.svg","persistent")},validatePassword:function(e){return sha256(btoa(e))==system.encPassword},cli:{i:function(e=!1,s=!1){if(!e||!s)return!1;let t=null,o=(e.trim()+" ").split(" "),l=o.splice(0,1)[0].trim();if(0!=o.length&&(1!=o.length||0!==o[0].trim().length)){t={"":[]};let e="";o.forEach(s=>{s.startsWith("-")?(""!=e.trim()&&(t[e]=""),e=s):""!=s.trim()&&(""==e.trim()?t[""].push(s):t[e]=s,e="")})}try{return null!=system.cli.commands[l]?system.cli.commands[l].method(t,s):l+": command not found"}catch(e){throw console.log(e),`${l}: ${e}`}},commands:{help:{shortHelp:"Displays help pages for commands",help:"Displays a help page for commands\n                    \n    USAGE\n        help\n        help <command>",method:e=>{let s="";if(null==e)s="-----help-----\n",s+="For more information about a specific command type: help <command>\n\n",s+=Object.entries(system.cli.commands).map(e=>`${e[0]}        ${e[1].shortHelp??"*No short help available*"}\n`).join("");else{let t=Object.values(e)[0];null==system.cli.commands[t]||null==system.cli.commands[t].help?s=`No help for '${t}' try: help help`:(s=`----- ${t} help-----\n\n`,s+=system.cli.commands[t].help+"\n")}return s}},echo:{shortHelp:"Echos your message back to you",help:"Echos your message back to you\n\n    USAGE\n        echo < message >\n         ----------------\n        echo Hello Word",method:e=>{if(null!=e){let s=e[""].join(" ");return s=s.trim(),'"'==s[0]&&'"'==s.slice(-1)&&(s=s.slice(1,-1)[0]),s}}},app:{shortHelp:"Starts an app",help:"Starts an app\n\n    USAGE\n        app < app name >\n        ----------------\n        app terminal\n        app notepad",method:e=>{if(null==e)return system.cli.commands.app.help;let s=e[""][0];if(null==apps[s])throw s+": No such app";processes.create(s)}},shutdown:{shortHelp:"Shoots the computer",help:"Makes computer go beep boob RIP.\n\n    USAGE\n        shutdown",method:()=>{system.shutdown()}},restart:{shortHelp:"Restarts",help:"Restarts the computer\n\n    USAGE\n        restart",method:()=>{system.restart()}},logout:{shortHelp:"Logouts",help:"Restarts the computer\n\n    USAGE\n        logout",method:()=>{system.logout()}},lock:{shortHelp:"Locks the screen",help:"Locks the screen\n\n    USAGE\n        lock",method:()=>{X.lockScreen.lock()}},exit:{shortHelp:"Exits the terminal window",help:'Exits the terminal window"\n\n    USAGE\n        exit',method:(e,s)=>{processes.remove(s.elementId)}},kill:{shortHelp:"Kills a process by pid",help:'Kills a running process"\n\n    USAGE\n        kill < process pid >\n        ----------------\n        kill 1',method:e=>{let s=e[""][0];if(isNaN(Number(s)))throw s+" - Must be a number";if(!isDefined(processes.pid[s]))throw s+" - No such process";processes.remove("pid"+s)}},killall:{shortHelp:"Kills processes ",help:'Kills all running processes of a name"\n\n    USAGE\n        killall < process name >\n        ----------------\n        killall terminal\n        killall google',method:e=>{let s=e[""][0];if(processList=processes.getRunningInstanceList(s),!isValid(processList)||0==processList)throw s+" - No processes found";for(const e of processList)processes.remove("pid"+e.id)}}}},shutdown:()=>page.changePage("./html/shutdown.html"),logout:()=>page.changePage("./html/X.html","(async()=>{await retrieveMainJs(false);system.startup();})();"),restart:()=>page.changePage("./html/shutdown.html","afterShutdown='restart'",!1)};