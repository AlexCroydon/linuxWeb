(async()=>{document.querySelector("build").innerHTML="build: "+await(await fetch("./build.ver")).text(),await delay(1e3);let e=e=>document.querySelector("message_info").innerHTML+=`<message><span>[ &nbsp; &nbsp; OK &nbsp; &nbsp; ]</span> ${e}</message>`;jsSources=["./js/libraries/sha256.js","./js/linuxWeb_js/system.js","./js/linuxWeb_js/apps.js","./js/linuxWeb_js/processes.js","./js/linuxWeb_js/fileSystem.js"],screensSources=new Map([["loginScreen","./screens/loginscreen.html"],["lockScreen","./screens/lockscreen.html"],["desktop","./screens/desktop.html"]]),(async()=>{new Promise(s=>{(async()=>{for(const s of jsSources)e(`Started retrieving ${s} ...`),await page.loadJs(s),e(`Retrieved ${s} ...`);s()})()})})(),(async()=>{new Promise(s=>{(async()=>{for(const s of screensSources[Symbol.iterator]())e(`Started retrieving ${s[1]} ...`),screens[s[0]]={src:s[1],html:await page.getHtml(s[1])},e(`Retrieved ${s[1]} and saved it to X.screen.data.${s[0]} ...`);s()})()})})(),await delay(1e3),page.changePage("./views/X.html","system.startup()",!0)})();