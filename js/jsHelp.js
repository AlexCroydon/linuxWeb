
function help(){
var helpPage = "";
helpPage +="===============\n"
helpPage +="Array Methods||\n"
helpPage +="===============\n"
helpPage +="\n"
helpPage +="concat() — Join several arrays into one\n"
helpPage +="indexOf() — Returns the primitive value of the specified object\n"
helpPage +="join() — Combine elements of an array into a single string and return\n"
helpPage +="the string\n"
helpPage +="lastIndexOf() — Gives the last position at which a given element\n"
helpPage +="appears in an array\n"
helpPage +="pop() — Removes the last element of an array\n"
helpPage +="push() — Add a new element at the end\n"
helpPage +="reverse() — Sort elements in descending order\n"
helpPage +="shift() — Remove the first element of an array\n"
helpPage +="slice() — Pulls a copy of a portion of an array into a new array\n"
helpPage +="sort() — Sorts elements alphabetically\n"
helpPage +="splice() — Adds elements in a specified way and position\n"
helpPage +="toString() — Converts elements to strings\n"
helpPage +="unshift() — Adds a new element to the beginning\n"
helpPage +="valueOf() — Returns the first position at which a given element\n"
helpPage +="appears in an array\n"
helpPage +="\n"
helpPage +="===========\n"
helpPage +="OPERATORS||\n"
helpPage +="===========\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Basic Operators\n"
helpPage +="-------------------------------------------\n"
helpPage +="+ — Addition\n"
helpPage +="- — Subtraction\n"
helpPage +="* — Multiplication\n"
helpPage +="/ — Division\n"
helpPage +="(...) — Grouping operator, operations within brackets are executed\n"
helpPage +="earlier than those outside\n"
helpPage +="% — Modulus (remainder )\n"
helpPage +="++ — Increment numbers\n"
helpPage +="-- — Decrement numbers\n"
helpPage +="Comparison Operators\n"
helpPage +="== — Equal to\n"
helpPage +="=== — Equal value and equal type\n"
helpPage +="!= — Not equal\n"
helpPage +="!== — Not equal value or not equal type\n"
helpPage +="> — Greater than\n"
helpPage +="< — Less than\n"
helpPage +=">= — Greater than or equal to\n"
helpPage +="<= — Less than or equal to\n"
helpPage +="? — Ternary operator\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Logical Operators\n"
helpPage +="-------------------------------------------\n"
helpPage +="document.write() — Write directly to the HTML document\n"
helpPage +="prompt() — Creates an dialogue for user input\n"
helpPage +="Global Functions\n"
helpPage +="decodeURI() — Decodes a Uniform Resource Identifier (URI) created\n"
helpPage +="by encodeURI or similar\n"
helpPage +="decodeURIComponent() — Decodes a URI component\n"
helpPage +="encodeURI() — Encodes a URI into UTF-8\n"
helpPage +="encodeURIComponent() — Same but for URI components\n"
helpPage +="eval() — Evaluates JavaScript code represented as a string\n"
helpPage +="isFinite() — Determines whether a passed value is a finite number\n"
helpPage +="isNaN() — Determines whether a value is NaN or not\n"
helpPage +="Number() — Returns a number converted from its argument\n"
helpPage +="parseFloat() — Parses an argument and returns a floating point number\n"
helpPage +="parseInt() — Parses its argument and returns an integer\n"
helpPage +="JAVASCRIPT LOOPS\n"
helpPage +="for (before loop; condition for loop; execute after loop) {\n"
 helpPage +="// what to do during the loop\n"
helpPage +="}\n"
helpPage +="for — The most common way to create a loop in JavaScript\n"
helpPage +="while — Sets up conditions under which aloop executes\n"
helpPage +="do while — Similar to the while loop, however, it executes at least\n"
helpPage +="once and performs a check at the end to see if the condition is met\n"
helpPage +="to execute again\n"
helpPage +="break — Used to stop and exit the cycle at certain conditions\n"
helpPage +="continue — Skip parts of the cycle if certain conditions are met\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="IF - ELSE STATEMENTS\n"
helpPage +="-------------------------------------------\n"
helpPage +="if (condition) {\n"
 helpPage +="// what to do if condition is met\n"
helpPage +="} else {\n"
 helpPage +="// what to do if condition is not met\n"
helpPage +="}\n"
helpPage +="\n"
helpPage +="=========\n"
helpPage +="STRINGS||\n"
helpPage +="=========\n"
helpPage +="var person = \"John Doe\";\n"
helpPage +="Escape Characters\n"
helpPage +="' — Single quote\n"
helpPage +="\" — Double quote\n"
helpPage +="\\ — Backslash\n"
helpPage +="\\b — Backspace\n"
helpPage +="\\f — Form feed\n"
helpPage +="\\n — New line\n"
helpPage +="\\r — Carriage return\n"
helpPage +="\\t — Horizontal tabulator\n"
helpPage +="\\v — Vertical tabulator\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="String Methods\n"
helpPage +="-------------------------------------------\n"
helpPage +="charAt() — Returns a character at a specified position inside a\n"
helpPage +="string\n"
helpPage +="charCodeAt() — Gives you the unicode of character at that position\n"
helpPage +="concat() — Concatenates (joins) two or more strings into one\n"
helpPage +="fromCharCode() — Returns a string created from the specified sequence\n"
helpPage +="of UTF-16 code units\n"
helpPage +="indexOf() — Provides the position of the first occurrence of a\n"
helpPage +="specified text within a string\n"
helpPage +="lastIndexOf() — Same as indexOf() but with the last occurrence,\n"
helpPage +="searching backwards\n"
helpPage +="match() — Retrieves the matches of a string against a search pattern\n"
helpPage +="replace() — Find and replace specified text in a string\n"
helpPage +="search() — Executes a search for a matching text and returns its\n"
helpPage +="position\n"
helpPage +="slice() — Extracts a section of a string and returns it as a new\n"
helpPage +="string\n"
helpPage +="split() — Splits a string object into an array of strings at a\n"
helpPage +="specified position\n"
helpPage +="substr() — Similar to slice() but extracts a substring depended on a\n"
helpPage +="specified number of characters\n"
helpPage +="substring() — Also similar to slice() but can’t accept negative\n"
helpPage +="indices\n"
helpPage +="toLowerCase() — Convert strings to lower case\n"
helpPage +="toUpperCase() — Convert strings to upper case\n"
helpPage +="valueOf() — Returns the primitive value (that has no properties or\n"
helpPage +="methods) of a string object\n"
helpPage +="\n"
helpPage +="===========================\n"
helpPage +="REGULAR EXPRESSION SYNTAX||\n"
helpPage +="===========================\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Pattern Modifiers\n"
helpPage +="-------------------------------------------\n"
helpPage +="e — Evaluate replacement\n"
helpPage +="i — Perform case-insensitive matching\n"
helpPage +="g — Perform global matching\n"
helpPage +="m — Perform multiple line matching\n"
helpPage +="s — Treat strings as single line\n"
helpPage +="x — Allow comments and whitespace in pattern\n"
helpPage +="U — Ungreedy pattern\n"
helpPage +="Brackets\n"
helpPage +="[abc] — Find any of the characters between the brackets\n"
helpPage +="[^abc] — Find any character not in the brackets\n"
helpPage +="[0-9] — Used to find any digit from 0 to 9\n"
helpPage +="[A-z] — Find any character from uppercase A to lowercase z\n"
helpPage +="(a|b|c) — Find any of the alternatives separated with |\n"
helpPage +="-------------------------------------------\n"
helpPage +="Metacharacters\n"
helpPage +="-------------------------------------------\n"
helpPage +=". — Find a single character, except newline or line terminator\n"
helpPage +="\\w — Word character\n"
helpPage +="\\W — Non-word character\n"
helpPage +="\\d — A digit\n"
helpPage +="\\D — A non-digit character\n"
helpPage +="\\s — Whitespace character\n"
helpPage +="\\S — Non-whitespace character\n"
helpPage +="\\b — Find a match at the beginning/end of a word\n"
helpPage +="\\B — A match not at the beginning/end of a word\n"
helpPage +="\\0 — NUL character\n"
helpPage +="\\n — A new line character\n"
helpPage +="\\f — Form feed character\n"
helpPage +="\\r — Carriage return character\n"
helpPage +="\\t — Tab character\n"
helpPage +="\\v — Vertical tab character\n"
helpPage +="\\xxx — The character specified by an octal number xxx\n"
helpPage +="\\xdd — Character specified by a hexadecimal number dd\n"
helpPage +="\\uxxxx — The Unicode character specified by a hexadecimal number xxxx\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Quantifiers\n"
helpPage +="-------------------------------------------\n"
helpPage +="n+ — Matches any string that contains at least one n\n"
helpPage +="n* — Any string that contains zero or more occurrences of n\n"
helpPage +="n? — A string that contains zero or one occurrences of n\n"
helpPage +="n{X} — String that contains a sequence of X n’s\n"
helpPage +="n{X,Y} — Strings that contains a sequence of X to Y n’s\n"
helpPage +="n{X,} — Matches any string that contains a sequence of at least X n’s\n"
helpPage +="n$ — Any string with n at the end of it\n"
helpPage +="^n — String with n at the beginning of it\n"
helpPage +="?=n — Any string that is followed by a specific string n\n"
helpPage +="?!n — String that is not followed by a specific string n\n"
helpPage +="\n"
helpPage +="==================\n"
helpPage +="NUMBERS AND MATH||\n"
helpPage +="==================\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Number Properties\n"
helpPage +="-------------------------------------------\n"
helpPage +="MAX_VALUE — The maximum numeric value representable in JavaScript\n"
helpPage +="MIN_VALUE — Smallest positive numeric value representable in\n"
helpPage +="JavaScript\n"
helpPage +="NaN — The “Not-a-Number” value\n"
helpPage +="NEGATIVE_INFINITY — The negative Infinity value\n"
helpPage +="POSITIVE_INFINITY — Positive Infinity value\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Number Methods\n"
helpPage +="-------------------------------------------\n"
helpPage +="toExponential() — Returns a string with a rounded number written as\n"
helpPage +="exponential notation\n"
helpPage +="toFixed() — Returns the string of a number with a specified number of\n"
helpPage +="decimals\n"
helpPage +="toPrecision() — String of a number written with a specified length\n"
helpPage +="toString() — Returns a number as a string\n"
helpPage +="valueOf() — Returns a number as a number\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Math Properties\n"
helpPage +="-------------------------------------------\n"
helpPage +="E — Euler’s number\n"
helpPage +="LN2 — The natural logarithm of 2\n"
helpPage +="LN10 — Natural logarithm of 10\n"
helpPage +="LOG2E — Base 2 logarithm of E\n"
helpPage +="LOG10E — Base 10 logarithm of E\n"
helpPage +="PI — The number PI\n"
helpPage +="SQRT1_2 — Square root of 1/2\n"
helpPage +="SQRT2 — The square root of 2\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Math Methods\n"
helpPage +="-------------------------------------------\n"
helpPage +="abs(x) — Returns the absolute (positive) value of x\n"
helpPage +="acos(x) — The arccosine of x, in radians\n"
helpPage +="asin(x) — Arcsine of x, in radians\n"
helpPage +="atan(x) — The arctangent of x as a numeric value\n"
helpPage +="atan2(y,x) — Arctangent of the quotient of its arguments\n"
helpPage +="ceil(x) — Value of x rounded up to its nearest integer\n"
helpPage +="cos(x) — The cosine of x (x is in radians)\n"
helpPage +="exp(x) — Value of Ex\n"
helpPage +="floor(x) — The value of x rounded down to its nearest integer\n"
helpPage +="log(x) — The natural logarithm (base E) of x\n"
helpPage +="max(x,y,z,...,n) — Returns the number with the highest value\n"
helpPage +="min(x,y,z,...,n) — Same for the number with the lowest value\n"
helpPage +="pow(x,y) — X to the power of y\n"
helpPage +="random() — Returns a random number between 0 and 1\n"
helpPage +="round(x) — The value of x rounded to its nearest integer\n"
helpPage +="sin(x) — The sine of x (x is in radians)\n"
helpPage +="sqrt(x) — Square root of x\n"
helpPage +="tan(x) — The tangent of an angle\n"
helpPage +="\n"
helpPage +="==================================\n"
helpPage +="DEALING WITH DATES IN JAVASCRIPT||\n"
helpPage +="==================================\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Setting Dates\n"
helpPage +="-------------------------------------------\n"
helpPage +="Date() — Creates a new date object with the current date and time\n"
helpPage +="Date(2017, 5, 21, 3, 23, 10, 0) — Create a custom date object. The\n"
helpPage +="numbers represent year, month, day, hour, minutes, seconds,\n"
helpPage +="milliseconds. You can omit anything you want except for year and\n"
helpPage +="month.\n"
helpPage +="Date(\"2017-06-23\") — Date declaration as a string\n"
helpPage +="Pulling Date and Time Values\n"
helpPage +="getDate() — Get the day of the month as a number (1-31)\n"
helpPage +="getDay() — The weekday as a number (0-6)\n"
helpPage +="getFullYear() — Year as a four digit number (yyyy)\n"
helpPage +="getHours() — Get the hour (0-23)\n"
helpPage +="getMilliseconds() — The millisecond (0-999)\n"
helpPage +="getMinutes() — Get the minute (0-59)\n"
helpPage +="getMonth() — Month as a number (0-11)\n"
helpPage +="getSeconds() — Get the second (0-59)\n"
helpPage +="getTime() — Get the milliseconds since January 1, 1970\n"
helpPage +="getUTCDate() — The day (date) of the month in the specified date\n"
helpPage +="according to universal time (also available for day, month, fullyear,\n"
helpPage +="hours, minutes etc.)\n"
helpPage +="parse — Parses a string representation of a date, and returns the\n"
helpPage +="number of milliseconds since January 1, 1970\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Set Part of a Date\n"
helpPage +="-------------------------------------------\n"
helpPage +="setDate() — Set the day as a number (1-31)\n"
helpPage +="setFullYear() — Sets the year (optionally month and day)\n"
helpPage +="setHours() — Set the hour (0-23)\n"
helpPage +="setMilliseconds() — Set milliseconds (0-999)\n"
helpPage +="setMinutes() — Sets the minutes (0-59)\n"
helpPage +="setMonth() — Set the month (0-11)\n"
helpPage +="setSeconds() — Sets the seconds (0-59)\n"
helpPage +="setTime() — Set the time (milliseconds since January 1, 1970)\n"
helpPage +="setUTCDate() — Sets the day of the month for a specified date\n"
helpPage +="according to universal time (also available for day, month, fullyear,\n"
helpPage +="hours, minutes etc.)\n"
helpPage +="\n"
helpPage +="==========\n"
helpPage +="DOM MODE||\n"
helpPage +="==========\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Node Properties\n"
helpPage +="-------------------------------------------\n"
helpPage +="attributes — Returns a live collection of all attributes registered\n"
helpPage +="to and element\n"
helpPage +="baseURI — Provides the absolute base URL of an HTML element\n"
helpPage +="childNodes — Gives a collection of an element’s child nodes\n"
helpPage +="firstChild — Returns the first child node of an element\n"
helpPage +="lastChild — The last child node of an element\n"
helpPage +="nextSibling — Gives you the next node at the same node tree level\n"
helpPage +="nodeName — Returns the name of a node\n"
helpPage +="nodeType — Returns the type of a node\n"
helpPage +="nodeValue — Sets or returns the value of a node\n"
helpPage +="ownerDocument — The top-level document object for this node\n"
helpPage +="parentNode — Returns the parent node of an element\n"
helpPage +="previousSibling — Returns the node immediately preceding the current\n"
helpPage +="one\n"
helpPage +="textContent — Sets or returns the textual content of a node and its\n"
helpPage +="descendants\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Node Methods\n"
helpPage +="-------------------------------------------\n"
helpPage +="appendChild() — Adds a new child node to an element as the last child\n"
helpPage +="node\n"
helpPage +="cloneNode() — Clones an HTML element\n"
helpPage +="compareDocumentPosition() — Compares the document position of two\n"
helpPage +="elements\n"
helpPage +="getFeature() — Returns an object which implements the APIs of a\n"
helpPage +="specified feature\n"
helpPage +="hasAttributes() — Returns true if an element has any attributes,\n"
helpPage +="otherwise false\n"
helpPage +="hasChildNodes() — Returns true if an element has any child nodes,\n"
helpPage +="otherwise false\n"
helpPage +="insertBefore() — Inserts a new child node before a specified,\n"
helpPage +="existing child node\n"
helpPage +="isDefaultNamespace() — Returns true if a specified namespaceURI is\n"
helpPage +="the default, otherwise false\n"
helpPage +="isEqualNode() — Checks if two elements are equal\n"
helpPage +="isSameNode() — Checks if two elements are the same node\n"
helpPage +="isSupported() — Returns true if a specified feature is supported on\n"
helpPage +="the element\n"
helpPage +="lookupNamespaceURI() — Returns the namespaceURI associated with a\n"
helpPage +="given node\n"
helpPage +="lookupPrefix() — Returns a DOMString containing the prefix for a\n"
helpPage +="given namespaceURI, if present\n"
helpPage +="normalize() — Joins adjacent text nodes and removes empty text nodes\n"
helpPage +="in an element\n"
helpPage +="removeChild() — Remov\n"
helpPage +="setAttributeNodeNS() — Adds a new namespaced attribute node to an\n"
helpPage +="element\n"
helpPage +="\n"
helpPage +="===============================\n"
helpPage +="WORKING WITH THE USER BROWSER||\n"
helpPage +="===============================\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Window Properties\n"
helpPage +="-------------------------------------------\n"
helpPage +="closed — Checks whether a window has been closed or not and returns\n"
helpPage +="true or false\n"
helpPage +="defaultStatus — Sets or returns the default text in the statusbar of\n"
helpPage +="a window\n"
helpPage +="document — Returns the document object for the window\n"
helpPage +="frames — Returns all <iframe> elements in the current window\n"
helpPage +="history — Provides the History object for the window\n"
helpPage +="innerHeight — The inner height of a window’s content area\n"
helpPage +="innerWidth — The inner width of the content area\n"
helpPage +="length — Find out the number of <iframe> elements in the window\n"
helpPage +="location — Returns the location object for the window\n"
helpPage +="name — Sets or returns the name of a window\n"
helpPage +="navigator — Returns the Navigator object for the window\n"
helpPage +="opener — Returns a reference to the window that created the window\n"
helpPage +="outerHeight — The outer height of a window, including toolbars/\n"
helpPage +="scrollbars\n"
helpPage +="outerWidth — The outer width of a window, including toolbars/\n"
helpPage +="scrollbars\n"
helpPage +="pageXOffset — Number of pixels the current document has been scrolled\n"
helpPage +="horizontally\n"
helpPage +="pageYOffset — Number of pixels the document has been scrolled\n"
helpPage +="vertically\n"
helpPage +="parent — The parent window of the current window\n"
helpPage +="screen — Returns the Screen object for the window\n"
helpPage +="screenLeft — The horizontal coordinate of the window (relative to\n"
helpPage +="screen)\n"
helpPage +="screenTop — The vertical coordinate of the window\n"
helpPage +="screenX — Same as screenLeft but needed for some browsers\n"
helpPage +="screenY — Same as screenTop but needed for some browsers\n"
helpPage +="self — Returns the current window\n"
helpPage +="status — Sets or returns the text in the statusbar of a window\n"
helpPage +="top — Returns the topmost browser window\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Window Methods\n"
helpPage +="-------------------------------------------\n"
helpPage +="alert() — Displays an alert box with a message and an OK button\n"
helpPage +="blur() — Removes focus from the current window\n"
helpPage +="clearInterval() — Clears a timer set with setInterval()\n"
helpPage +="clearTimeout() — Clears a timer set with setTimeout()\n"
helpPage +="close() — Closes the current window\n"
helpPage +="confirm() — Displays a dialogue box with a message and\n"
helpPage +="an OK and Cancelbutton\n"
helpPage +="focus() — Sets focus to the current window\n"
helpPage +="moveBy() — Moves a window relative to its current position\n"
helpPage +="moveTo() — Moves a window to a specified position\n"
helpPage +="open() — Opens a new browser window\n"
helpPage +="print() — Prints the content of the current window\n"
helpPage +="prompt() — Displays a dialogue box that prompts the visitor for input\n"
helpPage +="resizeBy() — Resizes the window by the specified number of pixels\n"
helpPage +="resizeTo() — Resizes the window to a specified width and height\n"
helpPage +="scrollBy() — Scrolls the document by a specified number of pixels\n"
helpPage +="scrollTo() — Scrolls the document to specified coordinates\n"
helpPage +="setInterval() — Calls a function or evaluates an expression at\n"
helpPage +="specified intervals\n"
helpPage +="setTimeout() — Calls a function or evaluates an expression after a\n"
helpPage +="specified interval\n"
helpPage +="stop() — Stops the window from loading\n"
helpPage +="Screen Properties\n"
helpPage +="availHeight — Returns the height of the screen (excluding the Windows\n"
helpPage +="Taskbar)\n"
helpPage +="availWidth — Returns the width of the screen (excluding the Windows\n"
helpPage +="Taskbar)\n"
helpPage +="colorDepth — Returns the bit depth of the color palette for\n"
helpPage +="displaying images\n"
helpPage +="height — The total height of the screen\n"
helpPage +="pixelDepth — The color resolution of the screen in bits per pixel\n"
helpPage +="width — The total width of the screen\n"
helpPage +="\n"
helpPage +="===================\n"
helpPage +="JAVASCRIPT EVENTS||\n"
helpPage +="===================\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Mouse\n"
helpPage +="-------------------------------------------\n"
helpPage +="onclick — The event occurs when the user clicks on an element\n"
helpPage +="oncontextmenu — User right-clicks on an element to open a context\n"
helpPage +="menu\n"
helpPage +="ondblclick — The user double-clicks on an element\n"
helpPage +="onmousedown — User presses a mouse button over an element\n"
helpPage +="onmouseenter — The pointer moves onto an element\n"
helpPage +="onmouseleave — Pointer moves out of an element\n"
helpPage +="onmousemove — The pointer is moving while it is over an element\n"
helpPage +="onmouseover — When the pointer is moved onto an element or one of its\n"
helpPage +="children\n"
helpPage +="onmouseout — User moves the mouse pointer out of an element or one of\n"
helpPage +="its children\n"
helpPage +="onmouseup — The user releases a mouse button while over an element\n"
helpPage +="-------------------------------------------\n"
helpPage +="Keyboard\n"
helpPage +="-------------------------------------------\n"
helpPage +="onkeydown — When the user is pressing a key down\n"
helpPage +="onkeypress — The moment the user starts pressing a key\n"
helpPage +="onkeyup — The user releases a key\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Frame\n"
helpPage +="-------------------------------------------\n"
helpPage +="onabort — The loading of a media is aborted\n"
helpPage +="onbeforeunload — Event occurs before the document is about to be\n"
helpPage +="unloaded\n"
helpPage +="onerror — An error occurs while loading an external file\n"
helpPage +="onhashchange — There have been changes to the anchor part of a URL\n"
helpPage +="onload — When an object has loaded\n"
helpPage +="onpagehide — The user navigates away from a webpage\n"
helpPage +="onpageshow — When the user navigates to a webpage\n"
helpPage +="onresize — The document view is resized\n"
helpPage +="onscroll — An element’s scrollbar is being scrolled\n"
helpPage +="onunload — Event occurs when a page has unloaded\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Form\n"
helpPage +="-------------------------------------------\n"
helpPage +="onblur — When an element loses focus\n"
helpPage +="onchange — The content of a form element changes\n"
helpPage +="(for <input>, <select>and <textarea>)\n"
helpPage +="onfocus — An element gets focus\n"
helpPage +="onfocusin — When an element is about to get focus\n"
helpPage +="onfocusout — The element is about to lose focus\n"
helpPage +="oninput — User input on an element\n"
helpPage +="oninvalid — An element is invalid\n"
helpPage +="onreset — A form is reset\n"
helpPage +="onsearch — The user writes something in a search field\n"
helpPage +="(for <input=\"search\">)\n"
helpPage +="onselect — The user selects some text (for <input> and <textarea>)\n"
helpPage +="onsubmit — A form is submitted\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Drag\n"
helpPage +="-------------------------------------------\n"
helpPage +="ondrag — An element is dragged\n"
helpPage +="ondragend — The user has finished dragging the element\n"
helpPage +="ondragenter — The dragged element enters a drop target\n"
helpPage +="ondragleave — A dragged element leaves the drop target\n"
helpPage +="ondragover — The dragged element is on top of the drop target\n"
helpPage +="ondragstart — User starts to drag an element\n"
helpPage +="ondrop — Dragged element is dropped on the drop target\n"
helpPage +="Clipboard\n"
helpPage +="oncopy — User copies the content of an element\n"
helpPage +="oncut — The user cuts an element’s content\n"
helpPage +="onpaste — A user pastes content in an element\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Media\n"
helpPage +="-------------------------------------------\n"
helpPage +="onabort — Media loading is aborted\n"
helpPage +="oncanplay — The browser can start playing media (e.g. a file has\n"
helpPage +="buffered enough)\n"
helpPage +="oncanplaythrough — When browser can play through media without\n"
helpPage +="stopping\n"
helpPage +="ondurationchange — The duration of the media changes\n"
helpPage +="onended — The media has reach its end\n"
helpPage +="onerror — Happens when an error occurs while loading an external file\n"
helpPage +="onloadeddata — Media data is loaded\n"
helpPage +="onloadedmetadata — Meta data (like dimensions and duration) are\n"
helpPage +="loaded\n"
helpPage +="onloadstart — Browser starts looking for specified media\n"
helpPage +="onpause — Media is paused either by the user or automatically\n"
helpPage +="onplay — The media has been started or is no longer paused\n"
helpPage +="onplaying — Media is playing after having been paused or stopped for\n"
helpPage +="buffering\n"
helpPage +="onprogress — Browser is in the process of downloading the media\n"
helpPage +="onratechange — The playing speed of the media changes\n"
helpPage +="onseeked — User is finished moving/skipping to a new position in the\n"
helpPage +="media\n"
helpPage +="onseeking — The user starts moving/skipping\n"
helpPage +="onstalled — The browser is trying to load the media but it is not\n"
helpPage +="available\n"
helpPage +="onsuspend — Browser is intentionally not loading media\n"
helpPage +="ontimeupdate — The playing position has changed (e.g. because of fast\n"
helpPage +="forward)\n"
helpPage +="onvolumechange — Media volume has changed (including mute)\n"
helpPage +="onwaiting — Media paused but expected to resume (for example,\n"
helpPage +="buffering)\n"
helpPage +="Animation\n"
helpPage +="animationend — A CSS animation is complete\n"
helpPage +="animationiteration — CSS animation is repeated\n"
helpPage +="animationstart — CSS animation has started\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Other\n"
helpPage +="-------------------------------------------\n"
helpPage +="transitionend — Fired when a CSS transition has completed\n"
helpPage +="onmessage — A message is received through the event source\n"
helpPage +="onoffline — Browser starts to work offline\n"
helpPage +="ononline — The browser starts to work online\n"
helpPage +="onpopstate — When the window’s history changes\n"
helpPage +="onshow — A <menu> element is shown as a context menu\n"
helpPage +="onstorage — A Web Storage area is updated\n"
helpPage +="ontoggle — The user opens or closes the <details> element\n"
helpPage +="onwheel — Mouse wheel rolls up or down over an element\n"
helpPage +="ontouchcancel — Screen touch is interrupted\n"
helpPage +="ontouchend — User finger is removed from a touch screen\n"
helpPage +="ontouchmove — A finger is dragged across the screen\n"
helpPage +="ontouchstart — Finger is placed on touch screen\n"
helpPage +="\n"
helpPage +="-------------------------------------------\n"
helpPage +="Errors\n"
helpPage +="-------------------------------------------\n"
helpPage +="try — Lets you define a block of code to test for errors\n"
helpPage +="catch — Set up a block of code to execute in case of an error\n"
helpPage +="throw — Create custom error messages instead of the standard\n"
helpPage +="JavaScript errors\n"
helpPage +="finally — Lets you execute code, after try and catch, regardless of\n"
helpPage +="the result\n"
helpPage +="Error Name Values\n"
helpPage +="name — Sets or returns the error name\n"
helpPage +="message — Sets or returns an error message in string from\n"
helpPage +="EvalError — An error has occurred in the eval() function\n"
helpPage +="RangeError — A number is “out of range”\n"
helpPage +="ReferenceError — An illegal reference has occurred\n"
helpPage +="SyntaxError — A syntax error has occurred\n"
helpPage +="TypeError — A type error has occurred\n"
helpPage +="URIError — An encodeURI() error has occurred\n"
return helpPage
 }